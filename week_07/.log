2021-07-12 21:03:59,397 [1098] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-12 21:03:59,397 [1098] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-12 21:03:59,397 [1098] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-12 21:03:59,399 [1098] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-12 21:03:59,400 [1098] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-12 21:03:59,400 [1098] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-12 21:03:59,910 [1098] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-12 21:03:59,920 [1098] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-12 21:03:59,920 [1098] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-12 21:03:59,922 [1098] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-12 21:03:59,923 [1098] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-12 21:03:59,923 [1098] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-12 21:04:09,928 [1106] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-12 21:04:09,929 [1106] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-12 21:04:09,929 [1106] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-12 21:04:09,931 [1106] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-12 21:04:09,931 [1106] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-12 21:04:09,931 [1106] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-13 10:34:01,173 [9185] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-13 10:34:01,173 [9185] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-13 10:34:01,173 [9185] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-13 10:34:01,183 [9185] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-13 10:34:01,184 [9185] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-13 10:34:01,184 [9185] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-13 11:59:54,509 [10311] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-13 11:59:54,510 [10311] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-13 11:59:54,510 [10311] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-13 11:59:54,512 [10311] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-13 11:59:54,512 [10311] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-13 11:59:54,512 [10311] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-13 12:06:26,264 [10572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-13 12:06:26,265 [10572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-13 12:06:26,265 [10572] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-13 12:06:26,267 [10572] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-13 12:06:26,267 [10572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-13 12:06:26,267 [10572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-13 12:42:23,988 [10942] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-13 12:42:24,015 [10942] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-13 12:42:24,016 [10942] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-13 12:42:24,018 [10942] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-13 12:42:24,019 [10942] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-13 12:42:24,019 [10942] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-13 12:42:27,148 [10942] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-13 12:42:27,148 [10942] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-13 12:42:27,148 [10942] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-13 12:42:27,152 [10942] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-13 12:42:27,153 [10942] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-13 12:42:27,153 [10942] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 08:33:04,303 [971] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 08:33:04,303 [971] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 08:33:04,303 [971] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 08:33:04,305 [971] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 08:33:04,305 [971] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 08:33:04,305 [971] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 08:33:05,104 [971] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 08:33:05,104 [971] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 08:33:05,105 [971] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 08:33:05,107 [971] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 08:33:05,107 [971] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 08:33:05,108 [971] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 09:20:20,084 [971] WARNING  py.warnings:110: [JupyterRequire] /Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3170: DtypeWarning: Columns (4) have mixed types.Specify dtype option on import or set low_memory=False.
  interactivity=interactivity, compiler=compiler, result=result)

2021-07-16 09:36:09,533 [1247] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 09:36:09,534 [1247] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 09:36:09,534 [1247] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 09:36:09,536 [1247] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 09:36:09,537 [1247] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 09:36:09,537 [1247] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 09:44:00,497 [1247] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/matplotlib/mpl-data
2021-07-16 09:44:00,497 [1247] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/matplotlib/mpl-data
2021-07-16 09:44:00,521 [1247] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/Users/iudh/.matplotlib
2021-07-16 09:44:00,523 [1247] DEBUG    matplotlib:1480: [JupyterRequire] matplotlib version 3.3.3
2021-07-16 09:44:00,523 [1247] DEBUG    matplotlib:1481: [JupyterRequire] interactive is False
2021-07-16 09:44:00,524 [1247] DEBUG    matplotlib:1482: [JupyterRequire] platform is darwin
2021-07-16 09:44:00,524 [1247] DEBUG    matplotlib:1483: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'ast', '_ast', 'inspect', 'dis', 'opcode', '_opcode', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'pprint', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'locale', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.text', 'textwrap', 'IPython.core.crashhandler', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_darwin_darwin', '_osx_support', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'struct', '_struct', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'queue', '_queue', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes', '_ctypes', 'ctypes._endian', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', '_uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipython_genutils.importstring', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'six', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'storemagic', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas._typing', 'mmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.interval', '_cython_0_29_22', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.tslibs', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.ops_dispatch', 'pandas._libs.algos', 'pandas._libs.lib', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.construction', 'pandas.core.common', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.arrays.masked', 'pandas.core.nanops', 'pandas.core.array_algos', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.categorical', 'csv', '_csv', 'pandas.core.accessor', 'pandas.core.arrays._mixins', 'pandas.core.array_algos.transforms', 'pandas.core.base', 'pandas.core.strings', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.tseries.offsets', 'pandas.core.arrays.floating', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.numeric', 'pandas.core.arrays.integer', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.flags', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas._libs.reduction', 'pandas.core.aggregation', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.times', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.replace', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals.ops', 'pandas.core.shared_docs', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.rolling', 'pandas.core.groupby.base', 'pandas.core.window.expanding', 'pandas.io.formats.format', 'pandas.core.reshape', 'pandas.core.reshape.concat', 'pandas.io.common', 'dataclasses', 'gzip', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.reshape.melt', 'pandas.core.reshape.util', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.io.formats.info', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.ops', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._odswriter', 'pandas._libs.json', 'pandas.io.formats.excel', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'cmath', 'pandas._version', 'pandas.io.formats.string', 'pandas.io.formats.html', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'matplotlib_inline', 'matplotlib_inline.backend_inline', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-07-16 09:44:01,150 [1247] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/Users/iudh/.matplotlib
2021-07-16 09:44:01,162 [1247] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /Users/iudh/.matplotlib/fontlist-v330.json
2021-07-16 09:44:01,866 [1247] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2021-07-16 09:44:01,869 [1247] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2021-07-16 09:44:05,552 [1247] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
2021-07-16 09:44:05,552 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,553 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,554 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,555 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,556 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,557 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,558 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,559 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-BlackItalic.otf) italic normal 900 normal>) = 11.525
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,560 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,561 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,562 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,563 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,564 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinItalic.otf) italic normal 200 normal>) = 11.24
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,565 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG3.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,566 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,567 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,568 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-MediumItalic.otf) italic normal 500 normal>) = 11.145
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-07-16 09:44:05,569 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 500 condensed>) = 10.344999999999999
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,570 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 300 condensed>) = 10.344999999999999
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,571 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,572 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,573 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,574 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,575 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-BoldItalic.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2021-07-16 09:44:05,576 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,577 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG1.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,578 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-LightItalic.otf) italic normal 300 normal>) = 11.145
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,579 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2021-07-16 09:44:05,580 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,581 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 500 condensed>) = 10.344999999999999
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,582 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG4.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG2.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,583 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,584 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,585 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Heavy.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,586 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-UltralightItalic.otf) italic normal 100 normal>) = 11.335
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,587 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-RegularItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,588 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Thin.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,589 [1247] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to DejaVu Sans ('/Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,689 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,690 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,691 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,692 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,693 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,694 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,695 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,695 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,695 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,695 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,695 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,696 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,697 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-BlackItalic.otf) italic normal 900 normal>) = 11.525
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,698 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,699 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,700 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,701 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinItalic.otf) italic normal 200 normal>) = 11.24
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,702 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG3.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,703 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,704 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-MediumItalic.otf) italic normal 500 normal>) = 11.145
2021-07-16 09:44:05,705 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 500 condensed>) = 10.344999999999999
2021-07-16 09:44:05,706 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 300 condensed>) = 10.344999999999999
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,707 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,708 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,709 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,710 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,711 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,712 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-BoldItalic.otf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,713 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2021-07-16 09:44:05,714 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,715 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG1.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,716 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-LightItalic.otf) italic normal 300 normal>) = 11.145
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,717 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,718 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 500 condensed>) = 10.344999999999999
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG4.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,719 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-ThinG2.otf) normal normal 740 normal>) = 10.373
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,720 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,721 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Heavy.otf) normal normal 900 normal>) = 10.525
2021-07-16 09:44:05,722 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-UltralightItalic.otf) italic normal 100 normal>) = 11.335
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,723 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay-RegularItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Light.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-07-16 09:44:05,724 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 500 normal>) = 10.145
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Symbols' (SFNSSymbols-Thin.otf) normal normal 300 normal>) = 10.145
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 800 condensed>) = 10.629999999999999
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 600 condensed>) = 10.44
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-07-16 09:44:05,725 [1247] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-07-16 09:44:52,008 [1247] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2021-07-16 09:45:57,488 [1282] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 09:45:57,488 [1282] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 09:45:57,488 [1282] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 09:45:57,492 [1282] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 09:45:57,493 [1282] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 09:45:57,493 [1282] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 09:46:00,120 [1282] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 4 threads.
2021-07-16 09:54:25,103 [1282] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2021-07-16 09:57:06,111 [1335] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 09:57:06,170 [1335] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 09:57:06,225 [1335] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 09:57:06,228 [1335] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 09:57:06,228 [1335] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 09:57:06,228 [1335] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 09:58:20,395 [1343] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 09:58:20,395 [1343] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 09:58:20,395 [1343] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 09:58:20,397 [1343] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 09:58:20,398 [1343] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 09:58:20,398 [1343] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 10:33:53,551 [1740] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 10:33:53,551 [1740] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 10:33:53,551 [1740] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 10:33:53,553 [1740] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 10:33:53,553 [1740] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 10:33:53,553 [1740] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 10:33:58,323 [1740] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 10:33:58,323 [1740] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 10:33:58,323 [1740] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 10:33:58,327 [1740] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 10:33:58,328 [1740] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 10:33:58,328 [1740] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 10:34:03,910 [1750] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 10:34:03,911 [1750] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 10:34:03,911 [1750] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 10:34:03,922 [1750] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 10:34:03,923 [1750] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 10:34:03,924 [1750] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 10:34:04,452 [1750] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-07-16 10:34:04,469 [1750] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-07-16 10:34:04,469 [1750] INFO     root:247: [JupyterRequire] Initializing comms.
2021-07-16 10:34:04,473 [1750] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-07-16 10:34:04,473 [1750] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-07-16 10:34:04,474 [1750] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-07-16 10:34:38,691 [1343] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x1417c5f10>
2021-07-16 10:34:38,691 [1343] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x1417c5f10> on colorbar
2021-07-16 10:34:38,691 [1343] DEBUG    matplotlib.colorbar:802: [JupyterRequire] Setting pcolormesh
2021-07-16 10:34:41,871 [1343] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x1418c69d0>
2021-07-16 10:34:41,871 [1343] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x1418c69d0> on colorbar
2021-07-16 10:34:41,871 [1343] DEBUG    matplotlib.colorbar:802: [JupyterRequire] Setting pcolormesh
2021-07-16 11:35:38,366 [1343] ERROR    root:152: [JupyterRequire] Internal Python error in the inspect module.
Below is the traceback from this internal error.

2021-07-16 11:35:38,512 [1343] INFO     root:1117: [JupyterRequire] 
Unfortunately, your original traceback can not be constructed.

2021-07-16 11:47:22,645 [1343] ERROR    root:152: [JupyterRequire] Internal Python error in the inspect module.
Below is the traceback from this internal error.

2021-07-16 11:55:52,469 [1343] ERROR    root:152: [JupyterRequire] Internal Python error in the inspect module.
Below is the traceback from this internal error.

2021-07-16 11:55:52,579 [1343] INFO     root:1117: [JupyterRequire] 
Unfortunately, your original traceback can not be constructed.

2021-07-16 12:01:45,241 [1343] WARNING  py.warnings:110: [JupyterRequire] /Users/iudh/opt/anaconda3/envs/clase/lib/python3.7/site-packages/sklearn/model_selection/_search.py:849: FutureWarning: The parameter 'iid' is deprecated in 0.22 and will be removed in 0.24.
  "removed in 0.24.", FutureWarning

2021-07-16 12:03:44,622 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001213 seconds
2021-07-16 12:03:44,622 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 0 trials
2021-07-16 12:04:21,493 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001212 seconds
2021-07-16 12:04:21,493 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 1/1 trials with best loss 390.955442
2021-07-16 12:04:47,794 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.000947 seconds
2021-07-16 12:04:47,794 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 2/2 trials with best loss 390.955442
2021-07-16 12:04:53,487 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001372 seconds
2021-07-16 12:04:53,488 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 3/3 trials with best loss 359.772522
2021-07-16 12:05:26,486 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.000953 seconds
2021-07-16 12:05:26,486 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 4/4 trials with best loss 359.772522
2021-07-16 12:05:35,776 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001010 seconds
2021-07-16 12:05:35,776 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 5/5 trials with best loss 359.772522
2021-07-16 12:05:57,875 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001028 seconds
2021-07-16 12:05:57,876 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 6/6 trials with best loss 359.772522
2021-07-16 12:06:40,028 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001035 seconds
2021-07-16 12:06:40,028 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 7/7 trials with best loss 359.772522
2021-07-16 12:07:19,862 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.001077 seconds
2021-07-16 12:07:19,863 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 8/8 trials with best loss 359.772522
2021-07-16 12:07:55,319 [1343] INFO     hyperopt.tpe:873: [JupyterRequire] build_posterior_wrapper took 0.000963 seconds
2021-07-16 12:07:55,320 [1343] INFO     hyperopt.tpe:909: [JupyterRequire] TPE using 9/9 trials with best loss 347.498975
